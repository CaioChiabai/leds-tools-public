"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[9689],{5602:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"andes":[{"type":"link","label":"Overview","href":"/leds-tools-public/andes/overview","docId":"andes/overview","unlisted":false},{"type":"link","label":"Project Management","href":"/leds-tools-public/andes/project_managment","docId":"andes/project_managment","unlisted":false},{"type":"link","label":"Instalation","href":"/leds-tools-public/andes/installation","docId":"andes/installation","unlisted":false},{"type":"link","label":"Understanding the Language","href":"/leds-tools-public/andes/lang","docId":"andes/lang","unlisted":false},{"type":"link","label":"Metamodel","href":"/leds-tools-public/andes/metamodel","docId":"andes/metamodel","unlisted":false},{"type":"link","label":"How to Use","href":"/leds-tools-public/andes/howtouse","docId":"andes/howtouse","unlisted":false},{"type":"link","label":"Frequently Asked Questions","href":"/leds-tools-public/andes/faq","docId":"andes/faq","unlisted":false}],"code_wise":[{"type":"link","label":"Code Wise","href":"/leds-tools-public/code_wise/","docId":"code_wise/code_wise","unlisted":false},{"type":"link","label":"Project Management","href":"/leds-tools-public/code_wise/project_managment","docId":"code_wise/project_managment","unlisted":false}],"made":[{"type":"link","label":"Overview","href":"/leds-tools-public/made/overview","docId":"made/overview","unlisted":false},{"type":"link","label":"Project Management","href":"/leds-tools-public/made/project_managment","docId":"made/project_managment","unlisted":false},{"type":"link","label":"Instalation","href":"/leds-tools-public/made/installation","docId":"made/installation","unlisted":false},{"type":"link","label":"Metamodel","href":"/leds-tools-public/made/metamodel","docId":"made/metamodel","unlisted":false},{"type":"link","label":"Understanding the Language","href":"/leds-tools-public/made/lang","docId":"made/lang","unlisted":false},{"type":"link","label":"How to Use","href":"/leds-tools-public/made/howtouse","docId":"made/howtouse","unlisted":false},{"type":"link","label":"Frequently Asked Questions","href":"/leds-tools-public/made/faq","docId":"made/faq","unlisted":false},{"type":"link","label":"1. Proposed Architecture","href":"/leds-tools-public/made/entrega_1","docId":"made/entrega_1","unlisted":false},{"type":"link","label":"Documentation","href":"/leds-tools-public/made/plano_comunicacao","docId":"made/plano_comunicacao","unlisted":false},{"type":"link","label":"Project Model Canvas","href":"/leds-tools-public/made/pmc","docId":"made/pmc","unlisted":false},{"type":"link","label":"DSM:","href":"/leds-tools-public/made/dsm","docId":"made/dsm","unlisted":false},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MADE Project Overview","href":"/leds-tools-public/made/Architecture/overview","docId":"made/Architecture/overview","unlisted":false},{"type":"link","label":"VS Code Extension \u2013 leds-tools-made","href":"/leds-tools-public/made/Architecture/leds-tools-made","docId":"made/Architecture/leds-tools-made","unlisted":false},{"type":"link","label":"Reporting & Visualization Library \u2013 leds-tools-made-lib","href":"/leds-tools-public/made/Architecture/leds-tools-made-lib","docId":"made/Architecture/leds-tools-made-lib","unlisted":false},{"type":"link","label":"Dockerized Runtime \u2013 leds-tools-made-docker","href":"/leds-tools-public/made/Architecture/leds-tools-made-docker","docId":"made/Architecture/leds-tools-made-docker","unlisted":false},{"type":"link","label":"GitHub Actions Automation \u2013 leds-tools-made-githubaction","href":"/leds-tools-public/made/Architecture/leds-tools-made-githubaction","docId":"made/Architecture/leds-tools-made-githubaction","unlisted":false}]}],"spark":[{"type":"link","label":"Overview","href":"/leds-tools-public/spark/overview","docId":"spark/overview","unlisted":false},{"type":"link","label":"Project Management","href":"/leds-tools-public/spark/project_managment","docId":"spark/project_managment","unlisted":false},{"type":"link","label":"Installation","href":"/leds-tools-public/spark/installation","docId":"spark/installation","unlisted":false},{"type":"link","label":"Front-end Architecture","href":"/leds-tools-public/spark/frontend_architecture","docId":"spark/frontend_architecture","unlisted":false},{"type":"link","label":"Metamodel","href":"/leds-tools-public/spark/metamodel","docId":"spark/metamodel","unlisted":false},{"type":"link","label":"Understanding the Language","href":"/leds-tools-public/spark/lang","docId":"spark/lang","unlisted":false},{"type":"link","label":"How to Use","href":"/leds-tools-public/spark/howtouse","docId":"spark/howtouse","unlisted":false},{"type":"link","label":"Release Plan","href":"/leds-tools-public/spark/release-plan","docId":"spark/release-plan","unlisted":false},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture Overview","href":"/leds-tools-public/spark/Architecture/overview","docId":"spark/Architecture/overview","unlisted":false},{"type":"link","label":"Understand the Top Layer","href":"/leds-tools-public/spark/Architecture/understandTopLayer","docId":"spark/Architecture/understandTopLayer","unlisted":false},{"type":"link","label":"The Bottom Layer - an Overview","href":"/leds-tools-public/spark/Architecture/theBottomLayerOverview","docId":"spark/Architecture/theBottomLayerOverview","unlisted":false},{"type":"category","label":"Architecture of the Src Folder","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Source Overview","href":"/leds-tools-public/spark/Architecture/Architecture of the Src Folder/overview","docId":"spark/Architecture/Architecture of the Src Folder/overview","unlisted":false},{"type":"link","label":"The CLI Folder","href":"/leds-tools-public/spark/Architecture/Architecture of the Src Folder/theCliFolder","docId":"spark/Architecture/Architecture of the Src Folder/theCliFolder","unlisted":false},{"type":"link","label":"The Documentation Folder","href":"/leds-tools-public/spark/Architecture/Architecture of the Src Folder/documentationArchitecture","docId":"spark/Architecture/Architecture of the Src Folder/documentationArchitecture","unlisted":false}]},{"type":"category","label":"Understanding the Generated Code Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/introduction","docId":"spark/Architecture/Understanding the Generated Code Architecture/introduction","unlisted":false},{"type":"category","label":"backend","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Clean Architecture Csharp","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Clean","docId":"spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Clean","unlisted":false},{"type":"link","label":"Python Architecture","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/backend/Python","docId":"spark/Architecture/Understanding the Generated Code Architecture/backend/Python","unlisted":false},{"type":"link","label":"Minimal API Csharp","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Minimal-API","docId":"spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Minimal-API","unlisted":false},{"type":"link","label":"Java Architecture","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/backend/Java","docId":"spark/Architecture/Understanding the Generated Code Architecture/backend/Java","unlisted":false}]},{"type":"category","label":"frontend","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Component-Based Architectures","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/frontend/componentBasedArchitecture","docId":"spark/Architecture/Understanding the Generated Code Architecture/frontend/componentBasedArchitecture","unlisted":false},{"type":"link","label":"Vue Plus Vuetfy","href":"/leds-tools-public/spark/Architecture/Understanding the Generated Code Architecture/frontend/vuePlusVuetfy","docId":"spark/Architecture/Understanding the Generated Code Architecture/frontend/vuePlusVuetfy","unlisted":false}]}]}]},{"type":"category","label":"Creational-Patterns","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creational Patterns","href":"/leds-tools-public/spark/Creational-Patterns/Factory-Method","docId":"spark/Creational-Patterns/Factory-Method","unlisted":false}]},{"type":"category","label":"Lib","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/leds-tools-public/spark/Lib/OverView","docId":"spark/Lib/OverView","unlisted":false},{"type":"link","label":"Explanning","href":"/leds-tools-public/spark/Lib/Explanning","docId":"spark/Lib/Explanning","unlisted":false},{"type":"link","label":"SRC","href":"/leds-tools-public/spark/Lib/Src","docId":"spark/Lib/Src","unlisted":false}]},{"type":"category","label":"Team Management","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Communication Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Back-end Communication Plan","href":"/leds-tools-public/spark/Team Management/Communication Plan/backend_communication_plan","docId":"spark/Team Management/Communication Plan/backend_communication_plan","unlisted":false},{"type":"link","label":"Front-end Communication Plan","href":"/leds-tools-public/spark/Team Management/Communication Plan/frontend_communication_plan","docId":"spark/Team Management/Communication Plan/frontend_communication_plan","unlisted":false}]},{"type":"category","label":"DISC","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Back-end Team Envolved","href":"/leds-tools-public/spark/Team Management/DISC/backend_disc","docId":"spark/Team Management/DISC/backend_disc","unlisted":false},{"type":"link","label":"Front-end DISC","href":"/leds-tools-public/spark/Team Management/DISC/frontend_disc","docId":"spark/Team Management/DISC/frontend_disc","unlisted":false}]},{"type":"category","label":"Team Topology","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Back-end Team Topology","href":"/leds-tools-public/spark/Team Management/Team Topology/backend_teamtopology","docId":"spark/Team Management/Team Topology/backend_teamtopology","unlisted":false},{"type":"link","label":"Front-end Team Topology","href":"/leds-tools-public/spark/Team Management/Team Topology/frontend_teamtopology","docId":"spark/Team Management/Team Topology/frontend_teamtopology","unlisted":false}]}]}],"test_ai":[{"type":"link","label":"Test.AI","href":"/leds-tools-public/test_ai/testai","docId":"test_ai/testai","unlisted":false},{"type":"link","label":"Project Management","href":"/leds-tools-public/test_ai/project_managment","docId":"test_ai/project_managment","unlisted":false},{"type":"link","label":"Gerencia de Processos de Software","href":"/leds-tools-public/test_ai/project_management_front","docId":"test_ai/project_management_front","unlisted":false}],"oraculo":[{"type":"link","label":"Overview","href":"/leds-tools-public/oraculo/overview","docId":"oraculo/overview","unlisted":false},{"type":"link","label":"Project Management","href":"/leds-tools-public/oraculo/project_managment","docId":"oraculo/project_managment","unlisted":false},{"type":"link","label":"Architecture and Modularization","href":"/leds-tools-public/oraculo/architecture","docId":"oraculo/architecture","unlisted":false},{"type":"category","label":"Metrics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Throughput","href":"/leds-tools-public/oraculo/metrics/throughput","docId":"oraculo/metrics/throughput","unlisted":false},{"type":"link","label":"BurnUp","href":"/leds-tools-public/oraculo/metrics/burnup","docId":"oraculo/metrics/burnup","unlisted":false},{"type":"link","label":"Lead Time","href":"/leds-tools-public/oraculo/metrics/leadtime","docId":"oraculo/metrics/leadtime","unlisted":false},{"type":"link","label":"Cycle Time","href":"/leds-tools-public/oraculo/metrics/cycletime","docId":"oraculo/metrics/cycletime","unlisted":false}],"href":"/leds-tools-public/oraculo/metrics/"}]},"docs":{"andes/faq":{"id":"andes/faq","title":"Frequently Asked Questions","description":"to do !","sidebar":"andes"},"andes/howtouse":{"id":"andes/howtouse","title":"How to Use","description":"1. Create a file with extension .andes (e.g., slave_one.spark)","sidebar":"andes"},"andes/installation":{"id":"andes/installation","title":"Instalation","description":"To install Ands, follow these steps:","sidebar":"andes"},"andes/lang":{"id":"andes/lang","title":"Understanding the Language","description":"The Andes grammar is used to define documentation components like Projects, Requirements, Actor and Use Cases. Below is a detailed description of the Andes grammar.","sidebar":"andes"},"andes/metamodel":{"id":"andes/metamodel","title":"Metamodel","description":"Model","sidebar":"andes"},"andes/overview":{"id":"andes/overview","title":"Overview","description":"Andes (Analysis as Code) is a tool that empowers software Requirements Engineers to define requirements, use cases, and actors, along with their interrelations. From these definitions, Andes generates documentation in Markdown, test cases, and inputs for other ecosystem tools, such as Made and Spark.","sidebar":"andes"},"andes/project_managment":{"id":"andes/project_managment","title":"Project Management","description":"Presents the project`s developing planning.","sidebar":"andes"},"code_wise/code_wise":{"id":"code_wise/code_wise","title":"Code Wise","description":"Code Wise is a Visual Studio Code extension that automatically analyzes your codebase at pre-commit, leveraging state-of-the-art Large Language Models (LLMs) such as OpenAI, Gemini, Groq, Ollama, Mistral, and others. It helps developers identify architectural improvements, SOLID principle violations, code smells, and suggest design patterns \u2014 all seamlessly integrated into their daily workflow.","sidebar":"code_wise"},"code_wise/project_managment":{"id":"code_wise/project_managment","title":"Project Management","description":"Presents the project`s developing planning.","sidebar":"code_wise"},"intro":{"id":"intro","title":"Vis\xe3o Geral","description":"O projeto _\u201cConecta FAPES: Uma plataforma de apoio \xe0 Pesquisa, Desenvolvimento e Inova\xe7\xe3o\u201d_ \xe9 fruto de uma parceria entre a Funda\xe7\xe3o de Amparo \xe0 Pesquisa e Inova\xe7\xe3o do Esp\xedrito Santo (FAPES) e o Laborat\xf3rio de Extens\xe3o em Desenvolvimento de Solu\xe7\xf5es (LEDS) do Instituto Federal de Educa\xe7\xe3o, Ci\xeancia e Tecnologia do Esp\xedrito Santo (Ifes)."},"made/Architecture/leds-tools-made":{"id":"made/Architecture/leds-tools-made","title":"VS Code Extension \u2013 leds-tools-made","description":"Purpose","sidebar":"made"},"made/Architecture/leds-tools-made-docker":{"id":"made/Architecture/leds-tools-made-docker","title":"Dockerized Runtime \u2013 leds-tools-made-docker","description":"Purpose","sidebar":"made"},"made/Architecture/leds-tools-made-githubaction":{"id":"made/Architecture/leds-tools-made-githubaction","title":"GitHub Actions Automation \u2013 leds-tools-made-githubaction","description":"Purpose","sidebar":"made"},"made/Architecture/leds-tools-made-lib":{"id":"made/Architecture/leds-tools-made-lib","title":"Reporting & Visualization Library \u2013 leds-tools-made-lib","description":"Purpose","sidebar":"made"},"made/Architecture/overview":{"id":"made/Architecture/overview","title":"MADE Project Overview","description":"MADE (Modular Agile Development Environment) is a modular system built to support agile teams in organizing their workflows, sprints, backlogs, and reporting. It aims to provide reusable, standardized, and automated solutions for agile project planning and documentation.","sidebar":"made"},"made/dsm":{"id":"made/dsm","title":"DSM:","description":"DSM","sidebar":"made"},"made/entrega_1":{"id":"made/entrega_1","title":"1. Proposed Architecture","description":"To support Agile Management modules with MADE (EPICs, user stories, backlog, sprints, releases, and dashboards) in a scalable and testable web application, I adopt Clean Architecture:","sidebar":"made"},"made/faq":{"id":"made/faq","title":"Frequently Asked Questions","description":"Here, we\u2019ve compiled answers to some of the most common questions we receive from our users, customers, and partners. If you have questions about our products, services, or processes, you\u2019ll likely find the answers here.","sidebar":"made"},"made/howtouse":{"id":"made/howtouse","title":"How to Use","description":"1. Create a file with any name and the .made extension.","sidebar":"made"},"made/installation":{"id":"made/installation","title":"Instalation","description":"To install Made, follow these steps:","sidebar":"made"},"made/lang":{"id":"made/lang","title":"Understanding the Language","description":"MADE`s language is compose of following parts: Project,Team, Backlog, TimeBox, Roadmap, and Process.","sidebar":"made"},"made/metamodel":{"id":"made/metamodel","title":"Metamodel","description":"This metamodel defines the structure of a \\"Made\\" system, which consists of several key components used in project management, such as projects, teams, processes, backlogs, and timeboxes. Below is a breakdown of the elements and their relationships:","sidebar":"made"},"made/overview":{"id":"made/overview","title":"Overview","description":"MADE (Management as a Code) is an innovative plugin that helps Project Management and development teams efficiently create backlogs and sprints. It emphasizes process reuse and standardization, streamlining task management across projects.","sidebar":"made"},"made/plano_comunicacao":{"id":"made/plano_comunicacao","title":"GPS Documentation \u2013 MADE Management","description":"Purpose: Record the DISC results of GPS and MADE members.","sidebar":"made"},"made/pmc":{"id":"made/pmc","title":"Project Model Canvas","description":"Justifications (Past)","sidebar":"made"},"made/project_managment":{"id":"made/project_managment","title":"Project Management","description":"Presents the project`s developing planning.","sidebar":"made"},"oraculo/architecture":{"id":"oraculo/architecture","title":"Architecture and Modularization","description":"The modular architecture of the project.","sidebar":"oraculo"},"oraculo/metrics/burnup":{"id":"oraculo/metrics/burnup","title":"BurnUp","description":"\ud83e\uddfe Definition:","sidebar":"oraculo"},"oraculo/metrics/cycletime":{"id":"oraculo/metrics/cycletime","title":"Cycle Time","description":"\ud83e\uddfe Definition:","sidebar":"oraculo"},"oraculo/metrics/index":{"id":"oraculo/metrics/index","title":"Metrics","description":"This page documents the key metrics used to monitor and improve our project performance. Each metric includes a definition, purpose, calculation method, how will we measure it, and the impact it\'ll have in the project.","sidebar":"oraculo"},"oraculo/metrics/leadtime":{"id":"oraculo/metrics/leadtime","title":"Lead Time","description":"\ud83e\uddfe Definition:","sidebar":"oraculo"},"oraculo/metrics/throughput":{"id":"oraculo/metrics/throughput","title":"Throughput","description":"\ud83e\uddfe Definition:","sidebar":"oraculo"},"oraculo/overview":{"id":"oraculo/overview","title":"Overview","description":"The Or\xe1culo is an system that connects key team information by integrating Discord and Git data to offer a real-time view of what\'s happening in the project.","sidebar":"oraculo"},"oraculo/project_managment":{"id":"oraculo/project_managment","title":"Project Management","description":"Presents the project`s developing planning.","sidebar":"oraculo"},"spark/Architecture/Architecture of the Src Folder/documentationArchitecture":{"id":"spark/Architecture/Architecture of the Src Folder/documentationArchitecture","title":"The Documentation Folder","description":"","sidebar":"spark"},"spark/Architecture/Architecture of the Src Folder/overview":{"id":"spark/Architecture/Architecture of the Src Folder/overview","title":"Source Overview","description":"The src folder is the most important part of the project. It is automatically generated by a Langium project but has been heavily modified. Each folder within it follows the single responsibility principle \u2014 that is, each folder has a very well-defined purpose. See Image 5 for an overview of the folder.","sidebar":"spark"},"spark/Architecture/Architecture of the Src Folder/theCliFolder":{"id":"spark/Architecture/Architecture of the Src Folder/theCliFolder","title":"The CLI Folder","description":"The CLI folder contains the necessary files to read the syntax definitions from the language folder, convert them into computational artifacts interpreted by JS/TS, and apply the commands needed to instantiate the project.","sidebar":"spark"},"spark/Architecture/overview":{"id":"spark/Architecture/overview","title":"Architecture Overview","description":"The architecture description was based on the most recent version in the Main branch of the Spark source repository, namely November 2024.","sidebar":"spark"},"spark/Architecture/theBottomLayerOverview":{"id":"spark/Architecture/theBottomLayerOverview","title":"The Bottom Layer - an Overview","description":"Achitecture Layers Overview","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Clean":{"id":"spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Clean","title":"Clean Architecture Csharp","description":"This document describes the backend structure of the Moranguinho project, based on Clean Architecture principles. The modular and layered organization promotes separation of concerns, testability, maintainability, and scalability.","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Minimal-API":{"id":"spark/Architecture/Understanding the Generated Code Architecture/backend/Csharp_Minimal-API","title":"Minimal API Csharp","description":"Minimal API Architecture","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/backend/Java":{"id":"spark/Architecture/Understanding the Generated Code Architecture/backend/Java","title":"Java Architecture","description":"This document describes the backend project structure in Java Spark, organized in layers to facilitate maintenance, testability, and component reuse.","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/backend/Python":{"id":"spark/Architecture/Understanding the Generated Code Architecture/backend/Python","title":"Python Architecture","description":"This document describes the backend project structure in Django, organized in layers to facilitate maintenance, testability, and component reuse.","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/frontend/componentBasedArchitecture":{"id":"spark/Architecture/Understanding the Generated Code Architecture/frontend/componentBasedArchitecture","title":"Component-Based Architectures","description":"Before proceeding with the explanation of the specific architectures implemented, we must introduce the component-based architecture.","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/frontend/vuePlusVuetfy":{"id":"spark/Architecture/Understanding the Generated Code Architecture/frontend/vuePlusVuetfy","title":"Vue Plus Vuetfy","description":"In this section, we will discuss the frontend architecture generated using Vue and Vuetify.","sidebar":"spark"},"spark/Architecture/Understanding the Generated Code Architecture/introduction":{"id":"spark/Architecture/Understanding the Generated Code Architecture/introduction","title":"Introduction","description":"Spark generates code for both the backend and the frontend. In the following sections, we will discuss how the code for both parts of the software is developed.","sidebar":"spark"},"spark/Architecture/understandTopLayer":{"id":"spark/Architecture/understandTopLayer","title":"Understand the Top Layer","description":"Achitecture Layers Overview","sidebar":"spark"},"spark/Creational-Patterns/Factory-Method":{"id":"spark/Creational-Patterns/Factory-Method","title":"Creational Patterns","description":"We used the Factory Method design pattern to organize and structure the generation of different parts of the system. The main idea was to create a modular and reusable way to generate files based on a common model, keeping the code organized, flexible, and easy to understand.","sidebar":"spark"},"spark/frontend_architecture":{"id":"spark/frontend_architecture","title":"Front-end Architecture","description":"Generators","sidebar":"spark"},"spark/howtouse":{"id":"spark/howtouse","title":"How to Use","description":"0. (Prerequisite): Ensure that the Leds - Spark - Beta extension is installed in your VSCode editor. This extension is available through the editor\'s built-in extension marketplace. It is required to leverage Spark\'s features without the need to import libraries locally into your project. Note that it differs from the Spark - LEDS extension, which is also available in the same marketplace. Unlike the latter, Leds - Spark - Beta relies on an external library that unifies backend and frontend generation with a greater decoupling of responsibilities from Langium. The library, in turn, is responsible for decoupling business logic from the extension\u2019s core repository, enabling reuse without compromising the main generation functionality.","sidebar":"spark"},"spark/installation":{"id":"spark/installation","title":"Installation","description":"To install Spark, follow these steps:","sidebar":"spark"},"spark/lang":{"id":"spark/lang","title":"Understanding the Language","description":"Spark\'s language is composed of the following parts: Configuration, Class Diagram, and Use Cases.","sidebar":"spark"},"spark/Lib/Explanning":{"id":"spark/Lib/Explanning","title":"Explanning","description":"To modularize, we copy the folder structure of the backend generators into our lib, in order to remove this part of the processing from within the main program.","sidebar":"spark"},"spark/Lib/OverView":{"id":"spark/Lib/OverView","title":"Overview","description":"In order to modularize, generate reuse and simplify the understanding of the Spark source code, we created a lib that does all the processing of the back-end generations.","sidebar":"spark"},"spark/Lib/Src":{"id":"spark/Lib/Src","title":"SRC","description":"With the use of the lib we needed to modify our source code of the spark generators, where all code generation logic was within the source code, with the use of our lib we removed all this part of the product logic and kept only the lib calls we created, keeping only one generator.ts within each respective language.","sidebar":"spark"},"spark/metamodel":{"id":"spark/metamodel","title":"Metamodel","description":"This class diagram provides a structured overview of the SPARK grammar, illustrating how various components such as Model, Configuration, AbstractElement, Module, EnumX, Actor, and UseCase interact and relate to each other. By defining AbstractElement as a base for Module and EnumX, the diagram promotes a hierarchical and organized approach to modeling system components. Additionally, the inclusion of fragments like QualifiedName and Comment ensures that elements are uniquely identifiable and well-documented within the system.","sidebar":"spark"},"spark/overview":{"id":"spark/overview","title":"Overview","description":"Spark allows to develope a information system on the following languagens, Architecture, and frameworks:","sidebar":"spark"},"spark/project_managment":{"id":"spark/project_managment","title":"Project Management","description":"Presents the project`s developing planning.","sidebar":"spark"},"spark/release-plan":{"id":"spark/release-plan","title":"Release Plan","description":"Version 1 for .NET","sidebar":"spark"},"spark/Team Management/Communication Plan/backend_communication_plan":{"id":"spark/Team Management/Communication Plan/backend_communication_plan","title":"Back-end Communication Plan","description":"1. Main Goal","sidebar":"spark"},"spark/Team Management/Communication Plan/frontend_communication_plan":{"id":"spark/Team Management/Communication Plan/frontend_communication_plan","title":"Front-end Communication Plan","description":"1. Main Goal","sidebar":"spark"},"spark/Team Management/DISC/backend_disc":{"id":"spark/Team Management/DISC/backend_disc","title":"Back-end Team Envolved","description":"Team DISC Profiles","sidebar":"spark"},"spark/Team Management/DISC/frontend_disc":{"id":"spark/Team Management/DISC/frontend_disc","title":"Front-end DISC","description":"1. Main Goal","sidebar":"spark"},"spark/Team Management/Team Topology/backend_teamtopology":{"id":"spark/Team Management/Team Topology/backend_teamtopology","title":"Back-end Team Topology","description":"\ud83d\udc65 Team Topology \u2013 SPARK","sidebar":"spark"},"spark/Team Management/Team Topology/frontend_teamtopology":{"id":"spark/Team Management/Team Topology/frontend_teamtopology","title":"Front-end Team Topology","description":"\ud83d\udc65 Team Topology \u2013 SPARK","sidebar":"spark"},"test_ai/project_management_front":{"id":"test_ai/project_management_front","title":"Gerencia de Processos de Software","description":"Presents the project`s developing planning - 2025.","sidebar":"test_ai"},"test_ai/project_managment":{"id":"test_ai/project_managment","title":"Project Management","description":"Presents the project`s developing planning.","sidebar":"test_ai"},"test_ai/testai":{"id":"test_ai/testai","title":"Test.AI","description":"Este tutorial descreve o processo de instala\xe7\xe3o da biblioteca Python test-ai-leds e da extens\xe3o Test.AI no Visual Studio Code, al\xe9m das configura\xe7\xf5es necess\xe1rias para seu funcionamento.","sidebar":"test_ai"}}}}')}}]);