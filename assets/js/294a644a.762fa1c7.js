"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[3470],{7622:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=n(4848),s=n(8453);const r={sidebar_position:2,title:"Understand the Top Layer"},o="Overview",a={id:"spark/Architecture/understandTopLayer",title:"Understand the Top Layer",description:"Achitecture Layers Overview",source:"@site/docs/spark/Architecture/2_understandTopLayer.mdx",sourceDirName:"spark/Architecture",slug:"/spark/Architecture/understandTopLayer",permalink:"/leds-tools-public/spark/Architecture/understandTopLayer",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Understand the Top Layer"},sidebar:"spark",previous:{title:"Architecture Overview",permalink:"/leds-tools-public/spark/Architecture/overview"},next:{title:"The Bottom Layer - an Overview",permalink:"/leds-tools-public/spark/Architecture/theBottomLayerOverview"}},c={},d=[{value:"Bin",id:"bin",level:2},{value:"Examples",id:"examples",level:2},{value:"Images",id:"images",level:2},{value:"Models",id:"models",level:2},{value:"Scripts",id:"scripts",level:2},{value:"Static",id:"static",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",img:"img",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Achitecture Layers Overview",src:n(6735).A+"",width:"833",height:"371"})}),"\n",(0,i.jsx)("span",{style:{textAlign:"center"},children:(0,i.jsx)(t.p,{children:"Image 2: Achitecture Layers Overview"})}),"\n",(0,i.jsx)(t.p,{children:"The top layer is, to some extent, independent from the others, since there is no communication between them. However, they certainly do communicate in the final and correct version of the tool."}),"\n",(0,i.jsx)(t.h2,{id:"bin",children:"Bin"}),"\n",(0,i.jsx)(t.p,{children:"This folder, normally used to store machine-compiled code, is responsible for containing the files that manage the execution of the available commands. These files are most likely executed via the Command Line Interface (CLI). Since the project is developed with NodeJS, it's possible to use JavaScript (JS) source code to access the system\u2019s operating system calls (SCs). Therefore, there is no need for compiled code in this folder; all files here are JS source code, but their purpose is the same as that of a folder containing binary files."}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.p,{children:"The examples folder contains files in the Spark format (.spark) with examples demonstrating how the tool's syntax works."}),"\n",(0,i.jsx)(t.h2,{id:"images",children:"Images"}),"\n",(0,i.jsx)(t.p,{children:"This folder contains images used in the repository\u2019s documentation and in the tool\u2019s documentation within VSCode. It is a folder with static files."}),"\n",(0,i.jsx)(t.h2,{id:"models",children:"Models"}),"\n",(0,i.jsx)(t.p,{children:"This folder is responsible for part of the documentation. It contains files that model the tool's reserved keywords and how they communicate and interact, using the Unified Modeling Language (UML)."}),"\n",(0,i.jsxs)(t.p,{children:["The files are in the .vpp format, which is read by the ",(0,i.jsx)("a",{href:"https://www.visual-paradigm.com/",children:"Visual Paradigm tool"}),". The files in question were created with an unidentified version of the tool. Image 3 shows the internal content of the only file present in the folder, opened in the most recent version of the tool as of now, version 17.2. Therefore, it is not guaranteed that the internal content in the image is complete."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Image 3: reserved keywords and how they communicate and interact",src:n(1815).A+"",width:"1265",height:"753"})}),"\n",(0,i.jsx)("span",{style:{textAlign:"center"},children:(0,i.jsx)(t.p,{children:"Image 3: reserved keywords and how they communicate and interact"})}),"\n",(0,i.jsx)(t.h2,{id:"scripts",children:"Scripts"}),"\n",(0,i.jsxs)(t.p,{children:["This folder is responsible for containing some code that will potentially be called by the ",(0,i.jsx)(t.strong,{children:"bin"})," folder but is not part of the CLI. Currently, its files are responsible for preparing the environment with the folder structure, ensuring that the generation of subsequent files does not encounter errors."]}),"\n",(0,i.jsx)(t.h2,{id:"static",children:"Static"}),"\n",(0,i.jsx)(t.p,{children:"This folder is automatically generated by a Langium project along with Monaco to create static documentation for the tool under development. Since the documentation is now being created separately with an external tool, namely Docusaurus, it has been discontinued and no longer receives updates."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},6735:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/architecture_layers_overview-a6a6df279912f878a7d9b00a40cd0611.png"},1815:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/spark_keywords_model-df54d5d7b26a15d5d291573be50e43a1.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);