"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[4290],{1908:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=n(4848),o=n(8453);const i={sidebar_position:2,title:"Explanning"},a=void 0,s={id:"spark/Lib/Explanning",title:"Explanning",description:"To modularize, we copy the folder structure of the backend generators into our lib, in order to remove this part of the processing from within the main program.",source:"@site/docs/spark/Lib/2_Explanning.md",sourceDirName:"spark/Lib",slug:"/spark/Lib/Explanning",permalink:"/leds-tools-public/spark/Lib/Explanning",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Explanning"},sidebar:"spark",previous:{title:"Overview",permalink:"/leds-tools-public/spark/Lib/OverView"},next:{title:"SRC",permalink:"/leds-tools-public/spark/Lib/Src"}},c={},l=[];function d(e){const r={mermaid:"mermaid",p:"p",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"To modularize, we copy the folder structure of the backend generators into our lib, in order to remove this part of the processing from within the main program."}),"\n",(0,t.jsx)(r.p,{children:"We created this directory structure"}),"\n",(0,t.jsx)(r.mermaid,{value:"graph TD\r\n  A[packages/]\r\n  A --\x3e C[java-generator/]\r\n  A --\x3e D[python-generator/]\r\n  A --\x3e B[csharp-generator/]\r\n  A --\x3e F[Shared/]\r\n  A --\x3e G[generators/]\r\n  B --\x3e B1[cleanArchitecture-generator/]\r\n  B --\x3e B2[minimal-API-generator/]\r\n  A --\x3e E[index.ts]\r\n"}),"\n",(0,t.jsx)(r.p,{children:"We created the generators folder to make the calls uniform and in the same directory, this is necessary npm\r\nThe final use of the lib is in referencing these generators folder"}),"\n",(0,t.jsx)(r.mermaid,{value:"graph TD\r\n\r\n  Packages/ --\x3e C[generators/]\r\n  C --\x3e C1[cleanArchitecture-generators/]\r\n  C --\x3e C2[minimal-API-generators/]\r\n  C --\x3e C3[django.ts]\r\n  C --\x3e C4[index.ts]\r\n  C --\x3e C5[springboot.ts]"}),"\n",(0,t.jsx)(r.p,{children:"The Shared folder was created due to the common need to use files that were also shared in the application within the original Spark structure."}),"\n",(0,t.jsx)(r.mermaid,{value:"\r\ngraph TD\r\n  Shared/ --\x3e D[ast.js]\r\n  Shared/ --\x3e A[generator-util.js]\r\n  Shared/ --\x3e B[relations.js]\r\n  Shared/ --\x3e C[index.ts]\r\n"}),"\n",(0,t.jsx)(r.p,{children:"Index.ts is an extremely important part in the construction of our lib, it is where the logic imports are scaled between folders and referenced at the time of import for use in the source code."})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var t=n(6540);const o={},i=t.createContext(o);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);